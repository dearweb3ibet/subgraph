// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Received extends ethereum.Event {
  get params(): Received__Params {
    return new Received__Params(this);
  }
}

export class Received__Params {
  _event: Received;

  constructor(event: Received) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class WaveClosed extends ethereum.Event {
  get params(): WaveClosed__Params {
    return new WaveClosed__Params(this);
  }
}

export class WaveClosed__Params {
  _event: WaveClosed;

  constructor(event: WaveClosed) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get wave(): WaveClosedWaveStruct {
    return changetype<WaveClosedWaveStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }
}

export class WaveClosedWaveStruct extends ethereum.Tuple {
  get startTimestamp(): BigInt {
    return this[0].toBigInt();
  }

  get endTimestamp(): BigInt {
    return this[1].toBigInt();
  }

  get closeTimestamp(): BigInt {
    return this[2].toBigInt();
  }

  get winnersNumber(): BigInt {
    return this[3].toBigInt();
  }

  get winning(): BigInt {
    return this[4].toBigInt();
  }

  get winners(): Array<Address> {
    return this[5].toAddressArray();
  }
}

export class WaveCreated extends ethereum.Event {
  get params(): WaveCreated__Params {
    return new WaveCreated__Params(this);
  }
}

export class WaveCreated__Params {
  _event: WaveCreated;

  constructor(event: WaveCreated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get wave(): WaveCreatedWaveStruct {
    return changetype<WaveCreatedWaveStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }
}

export class WaveCreatedWaveStruct extends ethereum.Tuple {
  get startTimestamp(): BigInt {
    return this[0].toBigInt();
  }

  get endTimestamp(): BigInt {
    return this[1].toBigInt();
  }

  get closeTimestamp(): BigInt {
    return this[2].toBigInt();
  }

  get winnersNumber(): BigInt {
    return this[3].toBigInt();
  }

  get winning(): BigInt {
    return this[4].toBigInt();
  }

  get winners(): Array<Address> {
    return this[5].toAddressArray();
  }
}

export class WaveParticipantSet extends ethereum.Event {
  get params(): WaveParticipantSet__Params {
    return new WaveParticipantSet__Params(this);
  }
}

export class WaveParticipantSet__Params {
  _event: WaveParticipantSet;

  constructor(event: WaveParticipantSet) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get participantAccountAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get participant(): WaveParticipantSetParticipantStruct {
    return changetype<WaveParticipantSetParticipantStruct>(
      this._event.parameters[2].value.toTuple()
    );
  }
}

export class WaveParticipantSetParticipantStruct extends ethereum.Tuple {
  get accountAddress(): Address {
    return this[0].toAddress();
  }

  get successes(): BigInt {
    return this[1].toBigInt();
  }

  get failures(): BigInt {
    return this[2].toBigInt();
  }

  get variance(): BigInt {
    return this[3].toBigInt();
  }
}

export class Contest__getWaveResultValue0Struct extends ethereum.Tuple {
  get startTimestamp(): BigInt {
    return this[0].toBigInt();
  }

  get endTimestamp(): BigInt {
    return this[1].toBigInt();
  }

  get closeTimestamp(): BigInt {
    return this[2].toBigInt();
  }

  get winnersNumber(): BigInt {
    return this[3].toBigInt();
  }

  get winning(): BigInt {
    return this[4].toBigInt();
  }

  get winners(): Array<Address> {
    return this[5].toAddressArray();
  }
}

export class Contest__getWaveParticipantsResultValue0Struct extends ethereum.Tuple {
  get accountAddress(): Address {
    return this[0].toAddress();
  }

  get successes(): BigInt {
    return this[1].toBigInt();
  }

  get failures(): BigInt {
    return this[2].toBigInt();
  }

  get variance(): BigInt {
    return this[3].toBigInt();
  }
}

export class Contest extends ethereum.SmartContract {
  static bind(address: Address): Contest {
    return new Contest("Contest", address);
  }

  getCurrentCounter(): BigInt {
    let result = super.call(
      "getCurrentCounter",
      "getCurrentCounter():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getCurrentCounter(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCurrentCounter",
      "getCurrentCounter():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getHubAddress(): Address {
    let result = super.call("getHubAddress", "getHubAddress():(address)", []);

    return result[0].toAddress();
  }

  try_getHubAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getHubAddress",
      "getHubAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getWave(id: BigInt): Contest__getWaveResultValue0Struct {
    let result = super.call(
      "getWave",
      "getWave(uint256):((uint256,uint256,uint256,uint256,uint256,address[]))",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );

    return changetype<Contest__getWaveResultValue0Struct>(result[0].toTuple());
  }

  try_getWave(
    id: BigInt
  ): ethereum.CallResult<Contest__getWaveResultValue0Struct> {
    let result = super.tryCall(
      "getWave",
      "getWave(uint256):((uint256,uint256,uint256,uint256,uint256,address[]))",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Contest__getWaveResultValue0Struct>(value[0].toTuple())
    );
  }

  getWaveParticipants(
    id: BigInt
  ): Array<Contest__getWaveParticipantsResultValue0Struct> {
    let result = super.call(
      "getWaveParticipants",
      "getWaveParticipants(uint256):((address,int256,int256,int256)[])",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );

    return result[0].toTupleArray<
      Contest__getWaveParticipantsResultValue0Struct
    >();
  }

  try_getWaveParticipants(
    id: BigInt
  ): ethereum.CallResult<
    Array<Contest__getWaveParticipantsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getWaveParticipants",
      "getWaveParticipants(uint256):((address,int256,int256,int256)[])",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Contest__getWaveParticipantsResultValue0Struct>()
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class CloseWaveCall extends ethereum.Call {
  get inputs(): CloseWaveCall__Inputs {
    return new CloseWaveCall__Inputs(this);
  }

  get outputs(): CloseWaveCall__Outputs {
    return new CloseWaveCall__Outputs(this);
  }
}

export class CloseWaveCall__Inputs {
  _call: CloseWaveCall;

  constructor(call: CloseWaveCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get winners(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class CloseWaveCall__Outputs {
  _call: CloseWaveCall;

  constructor(call: CloseWaveCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get hubAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class ProcessClosedBetParticipantsCall extends ethereum.Call {
  get inputs(): ProcessClosedBetParticipantsCall__Inputs {
    return new ProcessClosedBetParticipantsCall__Inputs(this);
  }

  get outputs(): ProcessClosedBetParticipantsCall__Outputs {
    return new ProcessClosedBetParticipantsCall__Outputs(this);
  }
}

export class ProcessClosedBetParticipantsCall__Inputs {
  _call: ProcessClosedBetParticipantsCall;

  constructor(call: ProcessClosedBetParticipantsCall) {
    this._call = call;
  }

  get betParticipants(): Array<
    ProcessClosedBetParticipantsCallBetParticipantsStruct
  > {
    return this._call.inputValues[0].value.toTupleArray<
      ProcessClosedBetParticipantsCallBetParticipantsStruct
    >();
  }
}

export class ProcessClosedBetParticipantsCall__Outputs {
  _call: ProcessClosedBetParticipantsCall;

  constructor(call: ProcessClosedBetParticipantsCall) {
    this._call = call;
  }
}

export class ProcessClosedBetParticipantsCallBetParticipantsStruct extends ethereum.Tuple {
  get addedTimestamp(): BigInt {
    return this[0].toBigInt();
  }

  get accountAddress(): Address {
    return this[1].toAddress();
  }

  get fee(): BigInt {
    return this[2].toBigInt();
  }

  get isFeeForSuccess(): boolean {
    return this[3].toBoolean();
  }

  get isWinner(): boolean {
    return this[4].toBoolean();
  }

  get winning(): BigInt {
    return this[5].toBigInt();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetHubAddressCall extends ethereum.Call {
  get inputs(): SetHubAddressCall__Inputs {
    return new SetHubAddressCall__Inputs(this);
  }

  get outputs(): SetHubAddressCall__Outputs {
    return new SetHubAddressCall__Outputs(this);
  }
}

export class SetHubAddressCall__Inputs {
  _call: SetHubAddressCall;

  constructor(call: SetHubAddressCall) {
    this._call = call;
  }

  get hubAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetHubAddressCall__Outputs {
  _call: SetHubAddressCall;

  constructor(call: SetHubAddressCall) {
    this._call = call;
  }
}

export class StartWaveCall extends ethereum.Call {
  get inputs(): StartWaveCall__Inputs {
    return new StartWaveCall__Inputs(this);
  }

  get outputs(): StartWaveCall__Outputs {
    return new StartWaveCall__Outputs(this);
  }
}

export class StartWaveCall__Inputs {
  _call: StartWaveCall;

  constructor(call: StartWaveCall) {
    this._call = call;
  }

  get endTimestamp(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get winnersNumber(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class StartWaveCall__Outputs {
  _call: StartWaveCall;

  constructor(call: StartWaveCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
