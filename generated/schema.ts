// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  TypedMap,
  Entity,
  Value,
  ValueKind,
  store,
  Bytes,
  BigInt,
  BigDecimal
} from "@graphprotocol/graph-ts";

export class Bet extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id != null, "Cannot save Bet entity without an ID");
    if (id) {
      assert(
        id.kind == ValueKind.STRING,
        `Entities of type Bet must have an ID of type String but the id '${id.displayData()}' is of type ${id.displayKind()}`
      );
      store.set("Bet", id.toString(), this);
    }
  }

  static load(id: string): Bet | null {
    return changetype<Bet | null>(store.get("Bet", id));
  }

  get id(): string {
    let value = this.get("id");
    return value!.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get createdTimestamp(): BigInt | null {
    let value = this.get("createdTimestamp");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set createdTimestamp(value: BigInt | null) {
    if (!value) {
      this.unset("createdTimestamp");
    } else {
      this.set("createdTimestamp", Value.fromBigInt(<BigInt>value));
    }
  }

  get creatorAddress(): string | null {
    let value = this.get("creatorAddress");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set creatorAddress(value: string | null) {
    if (!value) {
      this.unset("creatorAddress");
    } else {
      this.set("creatorAddress", Value.fromString(<string>value));
    }
  }

  get creatorFee(): BigInt | null {
    let value = this.get("creatorFee");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set creatorFee(value: BigInt | null) {
    if (!value) {
      this.unset("creatorFee");
    } else {
      this.set("creatorFee", Value.fromBigInt(<BigInt>value));
    }
  }

  get symbol(): string | null {
    let value = this.get("symbol");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toString();
    }
  }

  set symbol(value: string | null) {
    if (!value) {
      this.unset("symbol");
    } else {
      this.set("symbol", Value.fromString(<string>value));
    }
  }

  get targetMinPrice(): BigInt | null {
    let value = this.get("targetMinPrice");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set targetMinPrice(value: BigInt | null) {
    if (!value) {
      this.unset("targetMinPrice");
    } else {
      this.set("targetMinPrice", Value.fromBigInt(<BigInt>value));
    }
  }

  get targetMaxPrice(): BigInt | null {
    let value = this.get("targetMaxPrice");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set targetMaxPrice(value: BigInt | null) {
    if (!value) {
      this.unset("targetMaxPrice");
    } else {
      this.set("targetMaxPrice", Value.fromBigInt(<BigInt>value));
    }
  }

  get targetTimestamp(): BigInt | null {
    let value = this.get("targetTimestamp");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set targetTimestamp(value: BigInt | null) {
    if (!value) {
      this.unset("targetTimestamp");
    } else {
      this.set("targetTimestamp", Value.fromBigInt(<BigInt>value));
    }
  }

  get participationDeadlineTimestamp(): BigInt | null {
    let value = this.get("participationDeadlineTimestamp");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set participationDeadlineTimestamp(value: BigInt | null) {
    if (!value) {
      this.unset("participationDeadlineTimestamp");
    } else {
      this.set(
        "participationDeadlineTimestamp",
        Value.fromBigInt(<BigInt>value)
      );
    }
  }

  get feeForSuccess(): BigInt | null {
    let value = this.get("feeForSuccess");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set feeForSuccess(value: BigInt | null) {
    if (!value) {
      this.unset("feeForSuccess");
    } else {
      this.set("feeForSuccess", Value.fromBigInt(<BigInt>value));
    }
  }

  get feeForFailure(): BigInt | null {
    let value = this.get("feeForFailure");
    if (!value || value.kind == ValueKind.NULL) {
      return null;
    } else {
      return value.toBigInt();
    }
  }

  set feeForFailure(value: BigInt | null) {
    if (!value) {
      this.unset("feeForFailure");
    } else {
      this.set("feeForFailure", Value.fromBigInt(<BigInt>value));
    }
  }

  get isClosed(): boolean {
    let value = this.get("isClosed");
    return value!.toBoolean();
  }

  set isClosed(value: boolean) {
    this.set("isClosed", Value.fromBoolean(value));
  }

  get isSuccessful(): boolean {
    let value = this.get("isSuccessful");
    return value!.toBoolean();
  }

  set isSuccessful(value: boolean) {
    this.set("isSuccessful", Value.fromBoolean(value));
  }
}
